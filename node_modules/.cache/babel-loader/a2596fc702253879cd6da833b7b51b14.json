{"ast":null,"code":"var _jsxFileName = \"/Users/leighmartin/Desktop/reactstore/src/context.js\";\nimport React, { Component } from 'react';\nimport { storeProduct, detailProduct, storeProducts } from './data';\nconst ProductContext = React.createContext(); // Provider\n// Consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {});\n    };\n\n    this.decrement = id => {\n      console.log('this is decrement');\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removeProduct = tempProducts[index];\n      removeProduct.inCart = false;\n      removeProduct.count = 0;\n      removeProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          product: [...tempProducts]\n        };\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/leighmartin/Desktop/reactstore/src/context.js"],"names":["React","Component","storeProduct","detailProduct","storeProducts","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","console","log","removeItem","filter","removeProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { storeProduct, detailProduct, storeProducts } from './data';\n\nconst ProductContext = React.createContext();\n// Provider\n// Consumer\n\n\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        detailProduct: detailProduct,\n        cart: [],\n        modalOpen: false,\n        modalProduct:detailProduct,\n        cartSubTotal:0,\n        cartTax: 0,\n        cartTotal: 0,\n    };\n    componentDidMount() {\n        this.setProducts();\n    };\n    setProducts = () => {\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts = [...tempProducts,singleItem];\n        });\n        this.setState(() => {\n            return {products:tempProducts};\n        });\n    };\n\n    getItem = id => {\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n    };\n\n    handleDetail = id  => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {detailProduct: product};\n        });\n    };\n\n    addToCart = id => {\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n        const price = product.price;\n        product.total= price;\n        this.setState(() => {\n                return { products: tempProducts, cart: [...this.state.cart,product] };\n            }, \n            () => {\n                this.addTotals();\n            }\n        );   \n    };\n\n    openModal = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {modalProduct:product, modalOpen:true}\n        })\n    };\n\n    closeModal = () => {\n        this.setState(() => {\n            return {modalOpen:false}\n        })\n    };\n\n    increment = (id) => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    \n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n\n    product.count = product.count + 1;\n    product.total = product.count * product.price;\n\n    this.setState( () =>{return{cart:[...tempCart]}}, () => {})\n\n    };\n\n    decrement = (id) => {\n        console.log('this is decrement')\n    };\n\n    removeItem = (id) => {\n        let tempProducts = [...this.state.products];\n        let tempCart = [...this.state.cart];\n\n        tempCart = tempCart.filter(item => item.id !== id);\n\n        const index = tempProducts.indexOf(this.getItem(id));\n\n        let removeProduct = tempProducts[index];\n        removeProduct.inCart = false;\n        removeProduct.count = 0\n        removeProduct.total = 0;\n        \n        this.setState( () => {\n            return {\n                cart: [...tempCart],\n                product:[...tempProducts]\n            }\n        })\n    };\n\n    clearCart = () => {\n        this.setState(() => {\n            return {cart:[]};\n        },() =>{\n            this.setProducts();\n            this.addTotals();\n        }\n        );\n    };\n\n    addTotals = () => {\n        let subTotal = 0;\n        this.state.cart.map(item => (subTotal += item.total))\n        const tempTax = subTotal * 0.1;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax\n        this.setState(() => {\n            return {\n                cartSubTotal:subTotal,\n                cartTax:tax,\n                cartTotal:total\n            }\n        })\n    }\n\n\n\n    render() {\n        return (\n            <ProductContext.Provider \n            value={{\n                ...this.state,\n                handleDetail:this.handleDetail,\n                addToCart:this.addToCart,\n                openModal:this.openModal,\n                closeModal: this.closeModal,\n                increment: this.increment,\n                decrement: this.decrement,\n                removeItem: this.removeItem,\n                clearCart: this.clearCart\n\n            }}\n            >\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }\n}\n\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };"]},"metadata":{},"sourceType":"module"}